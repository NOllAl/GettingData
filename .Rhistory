sample(1:10)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4,replacement=TRUE)
sample(1:10,4,replace=TRUE)
set.seed(1)
rpois(5,2)
?dpois
qpois(2)
qpois(2,1)
qpois(2,3)
qpois(2,0)
qpois(2,0)
qpois(3,0)
qpois(3,1)
qpois(3,-1)
qpois(3,0.5)
qpois(0.3,0.5)
qpois(0.3,01)
qpois(0.3,2)
qpois(0.3,1.5)
qpois(0.3,1.3)
qpois(0.3,1.2)
qpois(0.3,1.25)
ppois(2,1)
ppois(2,2)
ppois(2,3)
ppois(2,4)
?var
var(c(8,9,10,11,12))
sqrt(var(c(9,8,10,11,12)))
library(xlsx)
install.package("XLConnect")
install.packages("XLConnect")
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlas='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 10000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 100000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 100
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 100
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 1000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 1000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
nosim <- 1000
x <- cumsum(rnorm(nosim))/1:nosim
plot(1:nosim,x,type='l',xlab='Iteration',ylab='Average',frame=FALSE)
abline(h=0,lty=2)
install.packages("RMySQL",type="source")
library(RMySQL)
library("RMySQL")
library(RMySQL)
library(RMySQL)
libraray(RMySQL)
library(RMySQL)
install.packages("RMySQL")
install.packages("RMySQL",type="source")
install.packages("rmysql",header="source")
install.packages("RMySQL",header="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
x <- rnorm(1000)
hist(x)
y <- rnorm(1000)
plot(x,y)
line
z <- rnorm(1000)
plot(x,z)
plot(x,z)
plot(x,y)
par(mar=c(2,2,2,2))
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y)
plot(x,y,pch=20)
plot(x,y,pch=19)
plot(x,y,pch=18)
plot(x,y,pch=2)
plot(x,y,pch=3)
plot(x,y,pch=4)
plot(x,y,pch=5)
plot(x,y,pch=6)
plot(x,y,pch=7)
plot(x,y,pch=8)
plot(x,y,pch=9)
plot(x,y,pch=10)
plot(x,y,pch=11)
plot(x,y,pch=12)
plot(x,y,pch=13)
example(points)
plot(x,y)
x <- rnorm(1000)
plot(x,y)
plot(x,y,pch=24)
plot(x,y,pch=25)
par(col=red,bg=blue)
par(col='red',bg='blue')
plot(x,y,pch=25)
par(col='black')
par(bg='white')
plot(x,y)
plot(x,y,pch=24)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y,pch=20)
title("Scatterplot")
text(-2,-2,"Label")
legend("topleft",legend="Data")
legend("topright",legend="Data")
legend("topleft",legend="Data",pch=20)
fit <- lm(x ~ y)
abline(fit)
abline(fit,lwd=3)
abline(fit,lwd=3,col="blue")
plot(x,y,lab="Height",ylab="Weight",main="Scatterplot",pch=20)
plot(x,y,xlab="Height",ylab="Weight",main="Scatterplot",pch=20)
legend("topright",legend="Data",pch=20)
fit <- lm(x~y)
abline(fit,lwd=3,col="red")
z <- rpois(100,2)
par(mfrow=c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par("mar")
par(mar=c(2,2,1,1))
plot(x,y,pch=20)
plot(x,z,pch=20)
par(mfrow=c(1,2))
plot(x,y,pch=20)
plot(x,z,pch=20)
par(mar=c(4,4,2,2))
plot(x,y,pch=20)
plot(x,z,pch=20)
par(mfrow=c(2,2))
plot(x,y)
plot(x,z)
plot(z,y)
plot(z,x)
par(mfrow=c(1,1,))
par(mfrow=c(1,1))
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2,50)
g
g <- gl(2,50,labels=c("Male","Female"))
str(g)
plot(x,y)
plot(x,y,type="n")
points(x[g=="Male"],y[g=="Male"],col="green")
points(x[g=="Female"],y[g=="Female"],col="red")
windows()
pdf()
win.metafile()
dev.cur()
windows()
dev.cur()
dev.set(5)
dev.cur()
dev.set(2)
library(dataset)
library(datasets)
with(faitful,plot(eruptions,waiting))
with(faithful,plot(eruptions,waiting))
title(main="Test")
dev.copy(png,file="muh.png")
dev.off()
?png
dev.cur()
dev.off()
dev.cur()
dev.set(2)
linrary(nlme)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
trellis.par.set()
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
instal.packages(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
install.packages("rMySQL")
install.packages("RMySQL")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
library(RMySQL)
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
install.packages("RMySQL",type="source")
setwd("C:/Users/localusr/Desktop/Stats/GettingData/Project")
#Download and unzip data
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
if (!file.exists("data")){dir.create("data")}
curdir <- getwd()
setwd(paste(curdir,"/data/",sep=""))
download.file(url,destfile="data.zip")
unzip("data.zip")
setwd(curdir)
#Load data and merge training with test data
test_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/X_test.txt",sep=""))
test_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/Y_test.txt",sep=""))
test_data <- cbind(test_data_act,test_data)
train_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/X_train.txt",sep=""))
train_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/Y_train.txt",sep=""))
train_data <- cbind(train_data_act,train_data)
data1 <- rbind(test_data,train_data)
varnames <- readLines(paste(curdir,"/data/UCI HAR Dataset/features.txt",sep="")) #Get variable names
ind <- grep("mean\\(|std",varnames) + 1    #get indices containing mean and sd measurement (and add one, because we added the activity line)
ind <- c(1, ind)                #add activity label
data <- data1[,ind]             #select data measurement with mean and standard variables
#Change variable names to something descriptive
varnames <- varnames[ind-1]
varnames <- (gsub("[0-9]+ ","",varnames))  #get rid of numbers in front
varnames <- gsub("-mean\\(\\)","Mean",varnames) #get rid of dash and () in mean
varnames <- gsub("-std\\(\\)","Std",varnames)
varnames <- c("Activity",varnames)
names(data) <- varnames
data$Activity <- factor(data$Activity,level=1:6,labels=c("Walk","Walk_Up","Walk_Down","Sit","Stand","Lay"))
View(data)
sapply(data,mean)
View(data)
tapply(data$t,data$Activity,mean)
tapply(data$tBodyAccMagStd,data$Activity,mean)
?sapply
aggregate(data,data$Activity,mean)
aggregate(data,Activity,mean)
as.list
aggregate(data,as.list(data$Activity),mean)
as.list(data$Activity)
aggregate(data,as.list(data$Activity),mean)
aggregate(t(data),as.list(data$Activity),mean)
aggregate(data,list(Act=data$Activity),mean)
aggregate(data[,2:],list(Act=data$Activity),mean)
aggregate(data[,2:end],list(Act=data$Activity),mean)
aggregate(data[,!first],list(Act=data$Activity),mean)
aggregate(data[,2],list(Act=data$Activity),mean)
aggregate(data[,2:dim(data)[2]],list(Act=data$Activity),mean)
data_sum <- aggregate(data[,2:dim(data)[2]],list(Act=data$Activity),mean)
View(data_sum)
#Create the seconde data second required in the assignment
data_sum <- aggregate(data[,2:dim(data)[2]],list(Acttivity=data$Activity),mean)
View(data_sum)
?write.table
#Write mean data to txt file
write.table(data_sum,file="data_sum.txt",row.name=FALSE)
getwd()
#Download and unzip data
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
if (!file.exists("data")){dir.create("data")}
curdir <- getwd()
setwd(paste(curdir,"/data/",sep=""))
download.file(url,destfile="data.zip")
unzip("data.zip")
setwd(curdir)
#Load data and merge training with test data
test_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/X_test.txt",sep=""))
test_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/Y_test.txt",sep=""))
test_data <- cbind(test_data_act,test_data)
train_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/X_train.txt",sep=""))
train_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/Y_train.txt",sep=""))
train_data <- cbind(train_data_act,train_data)
data1 <- rbind(test_data,train_data)
varnames <- readLines(paste(curdir,"/data/UCI HAR Dataset/features.txt",sep="")) #Get variable names
ind <- grep("mean\\(|std",varnames) + 1    #get indices containing mean and sd measurement (and add one, because we added the activity line)
ind <- c(1, ind)                #add activity label
data <- data1[,ind]             #select data measurement with mean and standard variables
#Change variable names to something descriptive
#varnames <- varnames[ind-1]
#varnames <- (gsub("[0-9]+ ","",varnames))  #get rid of numbers in front
#varnames <- gsub("-mean\\(\\)","Mean",varnames) #get rid of dash and () in mean
#varnames <- gsub("-std\\(\\)","Std",varnames)
#varnames <- c("Activity",varnames)
names(data) <- varnames
data$Activity <- factor(data$Activity,level=1:6,labels=c("Walk","Walk_Up","Walk_Down","Sit","Stand","Lay"))
#Create the seconde data second required in the assignment
data_sum <- aggregate(data[,2:dim(data)[2]],list(Acttivity=data$Activity),mean)
#Write mean data to txt file
write.table(data_sum,file="data_sum.txt",row.name=FALSE)
View(data_sum)
#Download and unzip data
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
if (!file.exists("data")){dir.create("data")}
curdir <- getwd()
setwd(paste(curdir,"/data/",sep=""))
download.file(url,destfile="data.zip")
unzip("data.zip")
setwd(curdir)
#Load data and merge training with test data
test_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/X_test.txt",sep=""))
test_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/Y_test.txt",sep=""))
test_data <- cbind(test_data_act,test_data)
train_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/X_train.txt",sep=""))
train_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/Y_train.txt",sep=""))
train_data <- cbind(train_data_act,train_data)
data1 <- rbind(test_data,train_data)
varnames <- readLines(paste(curdir,"/data/UCI HAR Dataset/features.txt",sep="")) #Get variable names
ind <- grep("mean\\(|std",varnames) + 1    #get indices containing mean and sd measurement (and add one, because we added the activity line)
ind <- c(1, ind)                #add activity label
data <- data1[,ind]             #select data measurement with mean and standard variables
#Change variable names to something descriptive
varnames <- varnames[ind-1]
#varnames <- (gsub("[0-9]+ ","",varnames))  #get rid of numbers in front
#varnames <- gsub("-mean\\(\\)","Mean",varnames) #get rid of dash and () in mean
#varnames <- gsub("-std\\(\\)","Std",varnames)
varnames <- c("Activity",varnames)
names(data) <- varnames
data$Activity <- factor(data$Activity,level=1:6,labels=c("Walk","Walk_Up","Walk_Down","Sit","Stand","Lay"))
#Create the seconde data second required in the assignment
data_sum <- aggregate(data[,2:dim(data)[2]],list(Acttivity=data$Activity),mean)
#Write mean data to txt file
write.table(data_sum,file="data_sum.txt",row.name=FALSE)
View(data_sum)
#Download and unzip data
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
if (!file.exists("data")){dir.create("data")}
curdir <- getwd()
setwd(paste(curdir,"/data/",sep=""))
download.file(url,destfile="data.zip")
unzip("data.zip")
setwd(curdir)
#Load data and merge training with test data
test_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/X_test.txt",sep=""))
test_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/test/Y_test.txt",sep=""))
test_data <- cbind(test_data_act,test_data)
train_data <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/X_train.txt",sep=""))
train_data_act <- read.table(paste(curdir,"/data/UCI HAR Dataset/train/Y_train.txt",sep=""))
train_data <- cbind(train_data_act,train_data)
data1 <- rbind(test_data,train_data)
varnames <- readLines(paste(curdir,"/data/UCI HAR Dataset/features.txt",sep="")) #Get variable names
ind <- grep("mean\\(|std",varnames) + 1    #get indices containing mean and sd measurement (and add one, because we added the activity line)
ind <- c(1, ind)                #add activity label
data <- data1[,ind]             #select data measurement with mean and standard variables
#Change variable names to something descriptive
varnames <- varnames[ind-1]
varnames <- (gsub("[0-9]+ ","",varnames))  #get rid of numbers in front
#varnames <- gsub("-mean\\(\\)","Mean",varnames) #get rid of dash and () in mean
#varnames <- gsub("-std\\(\\)","Std",varnames)
varnames <- c("Activity",varnames)
names(data) <- varnames
data$Activity <- factor(data$Activity,level=1:6,labels=c("Walk","Walk_Up","Walk_Down","Sit","Stand","Lay"))
#Create the seconde data second required in the assignment
data_sum <- aggregate(data[,2:dim(data)[2]],list(Acttivity=data$Activity),mean)
#Write mean data to txt file
write.table(data_sum,file="data_sum.txt",row.name=FALSE)
View(data_sum)
